/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class AAppelExpr7 extends PExpr7
{
    private PFonctionappel _fonctionappel_;

    public AAppelExpr7()
    {
        // Constructor
    }

    public AAppelExpr7(
        @SuppressWarnings("hiding") PFonctionappel _fonctionappel_)
    {
        // Constructor
        setFonctionappel(_fonctionappel_);

    }

    @Override
    public Object clone()
    {
        return new AAppelExpr7(
            cloneNode(this._fonctionappel_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAppelExpr7(this);
    }

    public PFonctionappel getFonctionappel()
    {
        return this._fonctionappel_;
    }

    public void setFonctionappel(PFonctionappel node)
    {
        if(this._fonctionappel_ != null)
        {
            this._fonctionappel_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fonctionappel_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._fonctionappel_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._fonctionappel_ == child)
        {
            this._fonctionappel_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._fonctionappel_ == oldChild)
        {
            setFonctionappel((PFonctionappel) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
