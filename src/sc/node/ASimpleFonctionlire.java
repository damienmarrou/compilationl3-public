/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class ASimpleFonctionlire extends PFonctionlire
{
    private TLire _lire_;
    private TParentheseo _parentheseo_;
    private TParenthesef _parenthesef_;

    public ASimpleFonctionlire()
    {
        // Constructor
    }

    public ASimpleFonctionlire(
        @SuppressWarnings("hiding") TLire _lire_,
        @SuppressWarnings("hiding") TParentheseo _parentheseo_,
        @SuppressWarnings("hiding") TParenthesef _parenthesef_)
    {
        // Constructor
        setLire(_lire_);

        setParentheseo(_parentheseo_);

        setParenthesef(_parenthesef_);

    }

    @Override
    public Object clone()
    {
        return new ASimpleFonctionlire(
            cloneNode(this._lire_),
            cloneNode(this._parentheseo_),
            cloneNode(this._parenthesef_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASimpleFonctionlire(this);
    }

    public TLire getLire()
    {
        return this._lire_;
    }

    public void setLire(TLire node)
    {
        if(this._lire_ != null)
        {
            this._lire_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._lire_ = node;
    }

    public TParentheseo getParentheseo()
    {
        return this._parentheseo_;
    }

    public void setParentheseo(TParentheseo node)
    {
        if(this._parentheseo_ != null)
        {
            this._parentheseo_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parentheseo_ = node;
    }

    public TParenthesef getParenthesef()
    {
        return this._parenthesef_;
    }

    public void setParenthesef(TParenthesef node)
    {
        if(this._parenthesef_ != null)
        {
            this._parenthesef_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parenthesef_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._lire_)
            + toString(this._parentheseo_)
            + toString(this._parenthesef_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._lire_ == child)
        {
            this._lire_ = null;
            return;
        }

        if(this._parentheseo_ == child)
        {
            this._parentheseo_ = null;
            return;
        }

        if(this._parenthesef_ == child)
        {
            this._parenthesef_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._lire_ == oldChild)
        {
            setLire((TLire) newChild);
            return;
        }

        if(this._parentheseo_ == oldChild)
        {
            setParentheseo((TParentheseo) newChild);
            return;
        }

        if(this._parenthesef_ == oldChild)
        {
            setParenthesef((TParenthesef) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
