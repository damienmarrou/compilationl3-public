/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class ATabExpr7 extends PExpr7
{
    private TNom _nom_;
    private TCrocheto _crocheto_;
    private TNombre _nombre_;
    private TCrochetf _crochetf_;

    public ATabExpr7()
    {
        // Constructor
    }

    public ATabExpr7(
        @SuppressWarnings("hiding") TNom _nom_,
        @SuppressWarnings("hiding") TCrocheto _crocheto_,
        @SuppressWarnings("hiding") TNombre _nombre_,
        @SuppressWarnings("hiding") TCrochetf _crochetf_)
    {
        // Constructor
        setNom(_nom_);

        setCrocheto(_crocheto_);

        setNombre(_nombre_);

        setCrochetf(_crochetf_);

    }

    @Override
    public Object clone()
    {
        return new ATabExpr7(
            cloneNode(this._nom_),
            cloneNode(this._crocheto_),
            cloneNode(this._nombre_),
            cloneNode(this._crochetf_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATabExpr7(this);
    }

    public TNom getNom()
    {
        return this._nom_;
    }

    public void setNom(TNom node)
    {
        if(this._nom_ != null)
        {
            this._nom_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._nom_ = node;
    }

    public TCrocheto getCrocheto()
    {
        return this._crocheto_;
    }

    public void setCrocheto(TCrocheto node)
    {
        if(this._crocheto_ != null)
        {
            this._crocheto_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._crocheto_ = node;
    }

    public TNombre getNombre()
    {
        return this._nombre_;
    }

    public void setNombre(TNombre node)
    {
        if(this._nombre_ != null)
        {
            this._nombre_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._nombre_ = node;
    }

    public TCrochetf getCrochetf()
    {
        return this._crochetf_;
    }

    public void setCrochetf(TCrochetf node)
    {
        if(this._crochetf_ != null)
        {
            this._crochetf_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._crochetf_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._nom_)
            + toString(this._crocheto_)
            + toString(this._nombre_)
            + toString(this._crochetf_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._nom_ == child)
        {
            this._nom_ = null;
            return;
        }

        if(this._crocheto_ == child)
        {
            this._crocheto_ = null;
            return;
        }

        if(this._nombre_ == child)
        {
            this._nombre_ = null;
            return;
        }

        if(this._crochetf_ == child)
        {
            this._crochetf_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._nom_ == oldChild)
        {
            setNom((TNom) newChild);
            return;
        }

        if(this._crocheto_ == oldChild)
        {
            setCrocheto((TCrocheto) newChild);
            return;
        }

        if(this._nombre_ == oldChild)
        {
            setNombre((TNombre) newChild);
            return;
        }

        if(this._crochetf_ == oldChild)
        {
            setCrochetf((TCrochetf) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
