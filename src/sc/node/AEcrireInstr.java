/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class AEcrireInstr extends PInstr
{
    private PFonctionecrire _fonctionecrire_;

    public AEcrireInstr()
    {
        // Constructor
    }

    public AEcrireInstr(
        @SuppressWarnings("hiding") PFonctionecrire _fonctionecrire_)
    {
        // Constructor
        setFonctionecrire(_fonctionecrire_);

    }

    @Override
    public Object clone()
    {
        return new AEcrireInstr(
            cloneNode(this._fonctionecrire_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAEcrireInstr(this);
    }

    public PFonctionecrire getFonctionecrire()
    {
        return this._fonctionecrire_;
    }

    public void setFonctionecrire(PFonctionecrire node)
    {
        if(this._fonctionecrire_ != null)
        {
            this._fonctionecrire_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._fonctionecrire_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._fonctionecrire_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._fonctionecrire_ == child)
        {
            this._fonctionecrire_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._fonctionecrire_ == oldChild)
        {
            setFonctionecrire((PFonctionecrire) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
